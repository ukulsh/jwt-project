# Generated by Django 3.0.7 on 2020-08-24 10:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('permission_id', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('content_type_id', models.IntegerField()),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('permission_id', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
                ('content_type_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JwtapiQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referencetoken', models.CharField(max_length=60)),
                ('question', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'Jwtapi_query',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('bot_id', models.CharField(blank=True, max_length=64, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('domain', models.CharField(max_length=64)),
                ('scope', models.CharField(max_length=64)),
                ('shard_key', models.CharField(blank=True, max_length=64, null=True)),
                ('version', models.CharField(blank=True, max_length=32, null=True)),
                ('latest', models.CharField(max_length=32)),
                ('status', models.CharField(max_length=32)),
                ('description', models.CharField(blank=True, max_length=512, null=True)),
                ('type', models.CharField(max_length=32)),
                ('image_url', models.CharField(blank=True, max_length=1024, null=True)),
                ('owner_type', models.CharField(blank=True, max_length=32, null=True)),
                ('created_by', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('is_active', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Intents',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(blank=True, max_length=64, null=True)),
                ('bot_id', models.CharField(blank=True, max_length=64, null=True)),
                ('version', models.CharField(blank=True, max_length=32, null=True)),
                ('latest', models.CharField(blank=True, max_length=32, null=True)),
                ('env', models.CharField(max_length=32)),
                ('intent_id', models.CharField(max_length=64)),
                ('intent_name', models.CharField(blank=True, max_length=512, null=True)),
                ('skill_id', models.CharField(blank=True, max_length=64, null=True)),
                ('label', models.CharField(blank=True, max_length=512, null=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField(blank=True, null=True)),
                ('utterances', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=32)),
                ('category', models.CharField(blank=True, max_length=64, null=True)),
                ('sub_category', models.CharField(blank=True, max_length=64, null=True)),
                ('crowd_source_enabled', models.IntegerField(blank=True, null=True)),
                ('crowd_source_task_id', models.CharField(blank=True, max_length=64, null=True)),
                ('display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('sample_query', models.CharField(blank=True, max_length=512, null=True)),
                ('created_by', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('live_reference_id', models.CharField(blank=True, max_length=100, null=True)),
                ('is_editable', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(max_length=6000)),
                ('sampleUtterance', models.CharField(max_length=10000)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BotSocialConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot_ref_id', models.CharField(blank=True, max_length=100, null=True)),
                ('channel_id', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.IntegerField(blank=True, null=True)),
                ('credential', models.TextField(blank=True, null=True)),
                ('social_channel', models.CharField(blank=True, max_length=512, null=True)),
                ('target_enabled', models.IntegerField(blank=True, null=True)),
                ('target_rule', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('locale', models.CharField(blank=True, max_length=100, null=True)),
                ('properties', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('web_hook_url', models.CharField(blank=True, max_length=100, null=True)),
                ('bot_id', models.CharField(blank=True, max_length=100, null=True)),
                ('reference_id', models.IntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('agent_desk', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bots',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.CharField(max_length=64)),
                ('account_name', models.CharField(max_length=256)),
                ('domain_id', models.CharField(blank=True, max_length=64, null=True)),
                ('support_desk_id', models.CharField(blank=True, max_length=64, null=True)),
                ('commerce_platform_id', models.CharField(blank=True, max_length=64, null=True)),
                ('admin_emails', models.CharField(blank=True, max_length=2048, null=True)),
                ('channel_id', models.CharField(blank=True, max_length=64, null=True)),
                ('image_url', models.CharField(blank=True, max_length=1024, null=True)),
                ('alias', models.CharField(blank=True, max_length=128, null=True)),
                ('department', models.CharField(blank=True, max_length=256, null=True)),
                ('tone', models.CharField(blank=True, max_length=64, null=True)),
                ('status', models.CharField(blank=True, max_length=32, null=True)),
                ('description', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_by', models.CharField(blank=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('timezone', models.CharField(blank=True, max_length=20, null=True)),
                ('whitelisted_emails', models.CharField(blank=True, max_length=1024, null=True)),
                ('title', models.CharField(blank=True, max_length=128, null=True)),
                ('show_draft_popup', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
